cmake_minimum_required (VERSION 2.8)
project (sonarlog_target_tracking)

include ( "${WORKSPACE_DIR}/base/cmake/Dependencies.cmake"  )
include ( "${WORKSPACE_DIR}/third_party/cmake/Gnuplot.cmake"  )

add_project_dependency (base                  ${WORKSPACE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
add_project_dependency (rock_util             ${WORKSPACE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
add_project_dependency (sonar_target_tracking ${WORKSPACE_DIR} ${CMAKE_CURRENT_BINARY_DIR})

setup_headers ( sonar_target_tracking ${sonar_target_tracking_SOURCE_DIR} )
setup_headers ( ${PROJECT_NAME} "${CMAKE_CURRENT_SOURCE_DIR}/src" )

file (
    GLOB THIRD_PARTY_HEADERS
    "${sonar_target_tracking_SOURCE_DIR}/third_party/*.h"
    "${sonar_target_tracking_SOURCE_DIR}/third_party/*.hpp"
)

configure_file_list (
    ${THIRD_PARTY_HEADERS}
    "${CMAKE_CURRENT_BINARY_DIR}/include/sonar_target_tracking/third_party"
)


include ( FindPkgConfig  )
include ( BoostTest )

find_package ( Boost COMPONENTS system filesystem program_options iostreams unit_test_framework REQUIRED )
find_package ( Eigen3 REQUIRED )
find_package ( OpenCV REQUIRED )

set (
    ${PROJECT_NAME}_INCLUDE_DIR
    ${PROJECT_SOURCE_DIR}/src
    ${CMAKE_BINARY_DIR}/include
    CACHE PATH "Sonar's log Target Tracking Include Directory"
    FORCE
)

file ( GLOB SRCS RELATIVE ${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/src/*.cpp )
list ( REMOVE_ITEM SRCS "src/main.cpp" )

set ( SRCS ${SRCS} ${sonar_target_tracking_SOURCES} )

pkg_check_modules(pocolog_cpp pocolog_cpp)

include_directories (
    ${sonarlog_target_tracking_INCLUDE_DIR}
    ${base_INCLUDE_DIR}
    ${sonar_util_INCLUDE_DIR}
    ${rock_util_INCLUDE_DIR}
    ${sonar_target_tracking_INCLUDE_DIR}
    ${gnuplot_INCLUDE_DIR}
    ${ROCK_ROBOTICS_INCLUDE_DIR}
    ${EIGEN3_INCLUDE_DIR}
)

link_directories (
    ${ROCK_ROBOTICS_LIBRARY_DIR}
)

set (
    LIBS
    rock_util
    base
    ${Boost_LIBRARIES}
    ${pocolog_cpp_LIBRARIES}
    ${OpenCV_LIBS}
)

add_executable (
    sonarlog_target_tracking
    src/main.cpp
    ${SRCS}
)

target_link_libraries (
    sonarlog_target_tracking
    ${LIBS}
)

add_executable (
    first_sample_proc
    examples/first_sample_proc.cpp
    ${SRCS}
)

target_link_libraries (
    first_sample_proc
    ${LIBS}
)

add_executable (
    convert_to_images
    examples/convert_to_images.cpp
    ${SRCS}
)

target_link_libraries (
    convert_to_images
    ${LIBS}
)

add_executable (
    dft_proc
    examples/dft_proc.cpp
    ${SRCS}
)

target_link_libraries (
    dft_proc
    ${LIBS}
)

add_executable (
    video_generator
    examples/video_generator.cpp
    ${SRCS}
)

target_link_libraries (
    video_generator
    ${LIBS}
)

boost_test_init()

add_boost_test (
    test_ArgumentParser
    SOURCES test/test_ArgumentParser.cpp src/ArgumentParser.cpp
    LIBRARIES ${Boost_LIBRARIES}
)

configure_file (
    ${PROJECT_SOURCE_DIR}/scripts/example0.sh.in
    ${PROJECT_BINARY_DIR}/scripts/example0.sh
    @ONLY
)

configure_file (
    ${PROJECT_SOURCE_DIR}/scripts/example1.sh.in
    ${PROJECT_BINARY_DIR}/scripts/example1.sh
    @ONLY
)
